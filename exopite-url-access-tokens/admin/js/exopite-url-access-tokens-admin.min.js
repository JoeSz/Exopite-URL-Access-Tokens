(function (a) { 'use strict'; a(function () { function b(g) { var h = a('.' + g.fn), i = { action: g.fn, args: g }; h.attr('data-id') && (i.postId = h.data('id')), h.attr('data-nonce') && (i.nonce = h.data('nonce')), a.ajax({ cache: !1, type: 'POST', url: ajaxurl, data: i, beforeSend: function () { h.addClass('loading') }, success: function (j) { h.html(j) }, error: function (j) { console.log('Error: ' + j.responseText) }, complete: function () { h.removeClass('loading') } }) } a('.show-hide-tokens-js').on('click', function () { a('#show-hide-tokens-js').toggle() }), a('.exopite-sof-group').on('exopite-sof-field-group-item-added-after', function (g, h) { var i = Array(32).join().replace(/(.|$)/g, function () { return (0 | 36 * Math.random()).toString(36) }); h.find('.token-hash').val(i) }); var c = a('.exopite-post-access-tokens-access-list'); if (c.length) { console.log('Accesslist'); b({ fn: 'exopite-post-access-tokens-access-list', page: '1', status: 'success', sort: 'time' }); var e; a(c).on('propertychange change keyup input paste', '.js-token-list-search', function (g) { g.stopPropagation(), clearTimeout(e); var h = a(this).val(); (2 < h.length || 0 == h.length) && (e = setTimeout(function () { var i = { fn: 'exopite-post-access-tokens-access-list', page: c.find('.token-log-pages .current').data('page'), status: c.find('.js-token-type-wrapper').data('status'), sort: c.find('.js-token-log').data('sort'), order: c.find('.js-token-log').data('order'), search: h }; b(i) }, 1e3)) }), a(c).on('click', '.js-token-type', function () { var h = { fn: 'exopite-post-access-tokens-access-list', page: c.find('.token-log-pages .current').data('page'), status: a(this).data('status'), sort: c.find('.js-token-log').data('sort'), order: c.find('.js-token-log').data('order'), search: c.find('.js-token-list-search').val() }; b(h) }), a(c).on('click', '.js-token-clear-logs', function (g) { g.preventDefault(), swal({ title: 'Are you sure?', text: a(this).data('confirm'), icon: 'warning', buttons: !0, dangerMode: !0 }).then(h => { if (h) { var i = { action: 'exopite-post-access-tokens-delete-access-list', nonce: a(this).parents('.exopite-post-access-tokens-access-list').data('nonce'), post_id: 'all' }; a.ajax({ cache: !1, type: 'POST', url: ajaxurl, data: i, beforeSend: function () { c.addClass('loading') }, success: function (j) { console.log('result: ' + j); b({ fn: 'exopite-post-access-tokens-access-list', page: '1', status: 'success', sort: 'time', order: 'DESC', search: '' }) }, error: function (j) { console.log('Error: ' + j.responseText), c.removeClass('loading') } }) } }) }), a(c).on('click', '.js-token-page', function () { var h = { fn: 'exopite-post-access-tokens-access-list', page: a(this).data('page'), status: c.find('.js-token-type-wrapper').data('status'), sort: c.find('.js-token-log').data('sort'), order: c.find('.js-token-log').data('order'), search: c.find('.js-token-list-search').val() }; b(h) }), a(c).on('click', '.js-token-sort', function () { var h = a(this).data('sort'), i = c.find('.js-token-log').data('sort'), j = c.find('.js-token-log').data('order'); h == i && (j = 'DESC' == j ? 'ASC' : 'DESC'); var k = { fn: 'exopite-post-access-tokens-access-list', page: c.find('.token-log-pages .current').data('page'), status: c.find('.js-token-type-wrapper').data('status'), sort: h, order: j, search: c.find('.js-token-list-search').val() }; b(k) }) } }) })(jQuery);